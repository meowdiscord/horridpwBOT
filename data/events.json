[null,{"name":"channel-created","temp":"channelcreated","event-type":"8","_id":"AAVpZ","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst channelcreated = tempVars('channelcreated');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.channel-created`);\n    if (log_system === \"enabled\") {\n        if (!channelcreated.name.startsWith(\"ticket-\")) {\n            embed.setTitle('Channel Created');\n            embed.setColor('#20fc3a');\n            embed.addField('Name', channelcreated, true);\n            embed.addField('Category', (channelcreated.parent && channelcreated.parent.name) ? channelcreated.parent.name : \"None\", true);\n            embed.setFooter(`ID: ${channelcreated.id}`);\n            embed.setTimestamp();\n            server.channels.get(log_chan).send(embed);\n            db.add(`${server.id}logs.channel_created`, 1);\n            db.add(`${server.id}logs.all`, 1);\n        }\n    }\n}\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"channel-deleted","temp":"channeldeleted","event-type":"9","_id":"LVnFA","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst channeldeleted = tempVars('channeldeleted');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.channel-deleted`);\n    if (log_system === \"enabled\") {\n        if (!channeldeleted.name.startsWith(\"ticket-\")) {\n            embed.setTitle('Channel Deleted');\n            embed.setColor('RED');\n            embed.setTimestamp();\n            embed.addField('Name', channeldeleted.name, true);\n            embed.addField('Category', (channeldeleted.parent && channeldeleted.parent.anem) ? channeldeleted.parent.name : \"None\", true);\n            embed.setFooter(`ID: ${channeldeleted.id}`);\n            server.channels.get(log_chan).send(embed);\n            db.add(`${server.id}logs.channel_deleted`, 1);\n            db.add(`${server.id}logs.all`, 1);\n        }\n    }\n}\n","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"channel-updated","temp":"channelbefore","event-type":"23","_id":"vXtCx","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst channelbefore = tempVars('channelbefore');\nconst channelafter = tempVars('channelafter');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.channel-updated`);\n    if (log_system === \"enabled\") {\n        if (!channelbefore.name.startsWith(\"ticket-\")) {\n            if (channelbefore != channelafter) {\n                embed.setTitle(`Channl ${channelbefore.name} Updated`);\n                embed.setColor('#20fc3a');\n                embed.addField('Name', (channelbefore.name == channelafter.name) ? \"Updated: ❌\" : `Updated: ✅ \\n New Name: ${channelafter.name}`, true);\n                embed.addField('Topic', (channelbefore.topic == channelafter.topic) ? \"Updated: ❌\" : `Updated: ✅ \\n New Topic: ${channelafter.topic}`, true);\n                embed.addField('Is NSFW?', (channelafter.nsfw) ? \"✅\" : \"❌\", true);\n                embed.addField('Category', (channelafter.parent && channelbefore.parent.name == channelafter.parent.name) ? \"Updated: ❌\" : `Updated: ✅ \\n New Category: ${channelafter.parent.name}`, true);\n                embed.addField('Position', (channelbefore.position == channelafter.position) ? \"Updated: ❌\" : `Updated:  ✅ \\n New Position: ${channelafter.position}`, true);\n                embed.setFooter(`ID: ${channelafter.id}`);\n                embed.setTimestamp();\n                server.channels.get(log_chan).send(embed);\n                db.add(`${server.id}logs.channel_updated`, 1);\n                db.add(`${server.id}logs.all`, 1);\n            }\n        }\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"temp2":"channelafter","restriction":"0"},{"name":"emoji-created","temp":"emojicreated","event-type":"16","_id":"NsZuU","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst emojicreated = tempVars('emojicreated');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.emoji-created`);\n    if (log_system === \"enabled\") {\n        embed.setTitle('Emoji Created');\n        embed.setColor('#20fc3a');\n        embed.setThumbnail(emojicreated.url);\n        embed.addField('Name', emojicreated.name, true);\n        embed.addField('Identifier', emojicreated.identifier, true);\n        embed.addField('Is Animated?', emojicreated.animated, true);\n        embed.setFooter(`ID: ${emojicreated.id}`);\n        embed.setTimestamp();\n        server.channels.get(log_chan).send(embed);\n        db.add(`${server.id}logs.emoji_created`, 1);\n        db.add(`${server.id}logs.all`, 1);\n    }\n}","storage":"0","varName":"","name":"Run Script"}]},{"name":"member-join","temp":"memberjoin","event-type":"6","_id":"WFmNF","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst memberjoin = tempVars('memberjoin');\nlet embed = new DiscordJS.RichEmbed();\n\n(async () => {\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.member-join`);\n    if (log_system === \"enabled\") {\n        const memS = await server.fetchMembers();\n        embed.setTitle('Member Joined');\n        embed.setColor('#3dd0f4');\n        embed.setAuthor(memberjoin.user.tag, memberjoin.user.displayAvatarURL);\n        embed.setThumbnail(memberjoin.user.displayAvatarURL);\n        embed.addField('User', memberjoin, true);\n        embed.addField('Member Count', server.members.size, true);\n        embed.setFooter(`ID: ${memberjoin.user.id}`);\n        embed.setTimestamp();\n        server.channels.get(log_chan).send(embed);\n        db.add(`${server.id}logs.member_joined`, 1);\n        db.add(`${server.id}logs.all`, 1);\n    }\n}\n})();","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"member-leave","temp":"memberleave","event-type":"7","_id":"sJMAW","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst memberleave = tempVars('memberleave');\nlet embed = new DiscordJS.RichEmbed();\n\n(async () => {\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.member-leave`);\n    if (log_system === \"enabled\") {\n        const memS = await server.fetchMembers();\n        embed.setTitle('Member Left');\n        embed.setColor('#3dd0f4');\n        embed.setAuthor(memberleave.user.tag, memberleave.user.displayAvatarURL);\n        embed.setThumbnail(memberleave.user.displayAvatarURL);\n        embed.addField('User', memberleave, true);\n        embed.addField('Member Count', server.members.size, true);\n        embed.setFooter(`ID: ${memberleave.user.id}`);\n        embed.setTimestamp();\n        server.channels.get(log_chan)\n            .send(embed);\n        db.add(`${server.id}logs.member_leave`, 1);\n        db.add(`${server.id}logs.all`, 1);\n    }\n}\n})();","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"message-deleted","temp":"msgdel","event-type":"18","_id":"XpYuO","actions":[{"behavior":"1","interpretation":"1","code":"if (me.permissions.has('VIEW_AUDIT_LOG')) {\n    server.fetchAuditLogs()\n        .then(audit => {\n            this.storeValue(audit.entries.first()\n                .executor, 1, \"delby\", cache);\n            Actions.callNextAction(cache);\n        })\n        .catch(console.error);\n} else {\n    Actions.callNextAction(cache);\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst msgdel = tempVars('msgdel');\nconst delby = tempVars(\"delby\");\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.message-deleted`);\n    if (log_system === \"enabled\") {\n        if (msgdel.author.bot == false) {\n            embed.setTitle('Message Deleted');\n            embed.setURL(msgdel.url);\n            embed.setAuthor(msgdel.author.tag, msgdel.author.displayAvatarURL);\n            embed.setThumbnail(msgdel.author.displayAvatarURL);\n            embed.addField('Deleted Text', (msgdel.content.length <= 1024) ? msgdel.content : `${msgdel.content.substring(0, 1020)}...`, true);\n            embed.addField('Channel', msgdel.channel, true);\n            embed.addField('Message Author', `${msgdel.author} (${msgdel.author.tag})`, true);\n            (delby) ? (msgdel.author !== delby) ? embed.addField('Deleted By', delby, true): '' : '';\n            (msgdel.mentions.users.size === 0) ? embed.addField('Mentioned Users', 'None', true): embed.addField('Mentioned Users', `Mentioned Member Count: ${msgdel.mentions.users.array().length} \\n Mentioned Users List: \\n ${msgdel.mentions.users.array()}`, true);\n            embed.setTimestamp();\n            server.channels.get(log_chan).send(embed);\n            db.add(`${server.id}logs.message_deleted`, 1);\n            db.add(`${server.id}logs.all`, 1);\n        }\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"message-edited","temp":"msg1","event-type":"26","_id":"voIMM","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst msg1 = tempVars('msg1');\nconst msg2 = tempVars(\"msg2\");\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.message-edited`);\n    if (log_system === \"enabled\") {\n        if (msg1.author.bot == false) {\n            embed.setTitle('Message Edited');\n            embed.setURL(msg2.url);\n            embed.setAuthor(msg1.author.tag, msg1.author.displayAvatarURL);\n            embed.setColor('#EE82EE');\n            embed.setThumbnail(msg1.author.displayAvatarURL);\n            embed.addField('Original Message', (msg1.content.length <= 1024) ? msg1.content : `${msg1.content.substring(0, 1020)}...`, true);\n            embed.addField('Edited Message', (msg2.content.length <= 1024) ? msg2.content : `${msg2.content.substring(0, 1020)}...`, true);\n            embed.addField('Channel', msg1.channel, true);\n            embed.addField('Message Author', `${msg1.author} (${msg1.author.tag})`, true);\n            embed.addField('Number of Edits', msg2.edits.length, true);\n            (msg2.mentions.users.size === 0) ? embed.addField('Mentioned Users', 'None', true): embed.addField('Mentioned Users', `Mentioned Member Count: ${msg2.mentions.users.array().length} \\n Mentioned Users List: \\n ${msg2.mentions.users.array()}`, true);\n            embed.setTimestamp();\n            server.channels.get(log_chan).send(embed);\n            db.add(`${server.id}logs.message_edited`, 1);\n            db.add(`${server.id}logs.all`, 1);\n        }\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"temp2":"msg2","restriction":"0"},{"name":"role-created","temp":"rolecreated","event-type":"10","_id":"ChohJ","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst rolecreated = tempVars('rolecreated');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.role-created`);\n    if (log_system === \"enabled\") {\n            embed.setTitle('Role Created');\n            embed.setColor('#20fc3a');\n            embed.addField('Name', rolecreated, true);\n            embed.addField('Managed', rolecreated.managed, true);\n            embed.addField('Position', rolecreated.position, true);\n            embed.setFooter(`ID: ${rolecreated.id}`);\n            embed.setTimestamp();\n            server.channels.get(log_chan).send(embed);\n            db.add(`${server.id}logs.role_created`, 1);\n            db.add(`${server.id}logs.all`, 1);\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"role-deleted","temp":"roledeleted","event-type":"11","_id":"VDYKZ","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst roledeleted = tempVars('roledeleted');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.role-deleted`);\n    if (log_system === \"enabled\") {\n            embed.setTitle('Role Deleted');\n            embed.setColor(roledeleted.hexColor);\n            embed.addField('Name', roledeleted.name, true);\n            embed.addField('Managed', roledeleted.managed, true);\n            embed.addField('Position', roledeleted.position, true);\n            embed.setFooter(`ID: ${roledeleted.id}`);\n            embed.setTimestamp();\n            server.channels.get(log_chan).send(embed);\n            db.add(`${server.id}logs.role_deleted`, 1);\n            db.add(`${server.id}logs.all`, 1);\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"role-updated","temp":"rolebefore","event-type":"25","_id":"BDQWN","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst rolebefore = tempVars('rolebefore');\nconst roleafter = tempVars(\"roleafter\");\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.role-updated`);\n    if (log_system === \"enabled\") {\n        if (roleafter.id != server.id) {\n            if (rolebefore.name != roleafter.name || rolebefore.hexColor != roleafter.hexColor) {\n                embed.setTitle(`Role \"${rolebefore.name}\" Updated`);\n                embed.setColor(roleafter.hexColor);\n                embed.addField('Name', (rolebefore.name == roleafter.name) ? `Updated: :x:` : `Updated: ✅ \\n New Name: ${roleafter.name}`, true);\n                embed.addField('Color', (rolebefore.hexColor == roleafter.hexColor) ? 'Updated: :x:' : `Updated: ✅ \\n New Color: ${roleafter.hexColor}`, true);\n                embed.setFooter(`ID: ${roleafter.id}`);\n                embed.setTimestamp();\n                server.channels.get(log_chan).send(embed);\n                db.add(`${server.id}logs.role_updated`, 1);\n                db.add(`${server.id}logs.all`, 1);\n            }\n        }\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"temp2":"roleafter","restriction":"0"},{"name":"v-channel-created","temp":"channelcreated","event-type":"14","_id":"YOeFC","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst channelcreated = tempVars('channelcreated');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.v-channel-created`);\n    if (log_system === \"enabled\") {\n        embed.setTitle('Voice Channel Created');\n        embed.setColor('#20fc3a');\n        embed.addField('Name', channelcreated.name, true);\n        embed.addField('Category', (channelcreated.parent && channelcreated.parent.name) ? channelcreated.parent.name : \"None\", true);\n        embed.addField('User Limit', channelcreated.userLimit, true);\n        embed.setFooter(`ID: ${channelcreated.id}`);\n        embed.setTimestamp();\n        server.channels.get(log_chan).send(embed);\n        db.add(`${server.id}logs.v_channel_created`, 1);\n        db.add(`${server.id}logs.all`, 1);\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"v-channel-deleted","temp":"channeldeleted","event-type":"15","_id":"XQYqW","actions":[{"behavior":"1","interpretation":"1","code":"const wm = this.getWrexMods();\nconst fs = wm.require(\"fs\");\nconst nodegyp = wm.require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst channeldeleted = tempVars('channeldeleted');\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.v-channel-deleted`);\n    if (log_system === \"enabled\") {\n        embed.setTitle('Voice Channel Deleted');\n        embed.setColor('RED');\n        embed.addField('Name', channeldeleted.name, true);\n        embed.addField('Category', (channeldeleted.parent && channeldeleted.parent.name) ? channeldeleted.parent.name : \"None\", true);\n        embed.addField('User Limit', channeldeleted.userLimit, true);\n        embed.setFooter(`ID: ${channeldeleted.id}`);\n        embed.setTimestamp();\n        server.channels.get(log_chan).send(embed);\n        db.add(`${server.id}logs.v_channel_deleted`, 1);\n        db.add(`${server.id}logs.all`, 1);\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"restriction":"0"},{"name":"initialzation","temp":"","event-type":"1","actions":[{"gameName":"horrid.pw","gameLink":"","name":"Set Bot Game"},{"info":"0","find":"645375283989446706","storage":"3","varName":"staff-talk","name":"Find Channel"},{"channel":"7","varName":"staff-talk","message":"Thank's for powering me back on!","storage":"1","varName2":"poweronmessage","name":"Send Message"},{"time":"10","measurement":"1","name":"Wait"},{"storage":"1","varName":"poweronmessage","message":"Type hpw.help to list all my commands!","name":"Edit Message"}]}]